var searchIndex = JSON.parse('{\
"sparrow":{"doc":"Sparrow is an implementation of TMSN for boosting.","i":[[5,"training","sparrow","",null,[[["string",3]]]],[5,"testing","","",null,[[["string",3]]]],[0,"commons","","Common functions and classes.",null,null],[5,"get_weight","sparrow::commons","",null,[[["example",6]]]],[5,"get_weights","","",null,[[["vec",3]],["vec",3]]],[5,"get_bound","","",null,[[]]],[5,"set_init_weight","","Set initial weights to the samples",null,[[["examplewithscore",6],["vec",3]],[["exampleinsampleset",6],["vec",3]]]],[5,"is_zero","","",null,[[]]],[5,"get_sign","","",null,[[]]],[0,"bins","","",null,null],[3,"Bins","sparrow::commons::bins","The percentiles of a specific feature dimension, which…",null,null],[5,"load_bins","","",null,[[["option",4],["config",3]],[["vec",3],["bins",3]]]],[11,"len","","Return the number of thresholds. ",0,[[]]],[11,"get_vals","","Return the vector of thresholds.",0,[[],["vec",3]]],[11,"get_split_index","","",0,[[],["tfeature",6]]],[0,"channel","sparrow::commons","",null,null],[3,"ChannelMonitor","sparrow::commons::channel","",null,null],[3,"Sender","","",null,null],[3,"Receiver","","",null,null],[5,"bounded","","",null,[[]]],[11,"send","","",1,[[]]],[11,"try_send","","",1,[[]]],[11,"is_full","","",1,[[]]],[11,"recv","","",2,[[],["option",4]]],[11,"try_recv","","",2,[[],["option",4]]],[11,"len","","",2,[[]]],[0,"io","sparrow::commons","",null,null],[5,"create_bufreader","sparrow::commons::io","",null,[[["string",3]],[["bufreader",3],["file",3]]]],[5,"create_bufwriter","","",null,[[["string",3]],[["bufwriter",3],["file",3]]]],[5,"raw_read_all","","",null,[[["string",3]],["string",3]]],[5,"read_all","","",null,[[["string",3]],["vec",3]]],[5,"write_all","","",null,[[["string",3]],["result",6]]],[5,"read_k_lines","","",null,[[["bufreader",3]],[["string",3],["vec",3]]]],[5,"read_k_labeled_data","","",null,[[["bufreader",3],["string",3]],[["vec",3],["labeleddata",3]]]],[5,"read_k_labeled_data_from_binary_file","","",null,[[["bufreader",3]],[["example",6],["vec",3]]]],[5,"write_to_binary_file","","",null,[[["example",6],["bufwriter",3]]]],[5,"load_s3","","",null,[[],["option",4]]],[5,"write_s3","","",null,[[]]],[5,"clear_s3_bucket","","",null,[[]]],[0,"labeled_data","sparrow::commons","",null,null],[3,"LabeledData","sparrow::commons::labeled_data","Training example. It consists of two fields: `feature` and…",null,null],[12,"feature","","",3,null],[12,"label","","",3,null],[11,"new","","",3,[[["vec",3]],["labeleddata",3]]],[0,"packet","sparrow::commons","",null,null],[3,"Packet","sparrow::commons::packet","",null,null],[12,"packet_signature","","",4,null],[12,"source_machine","","",4,null],[12,"source_machine_id","","",4,null],[12,"node_id","","",4,null],[12,"updates","","",4,null],[12,"gamma","","",4,null],[12,"sample_version","","",4,null],[12,"ess","","",4,null],[12,"base_model_signature","","",4,null],[12,"this_model_signature","","",4,null],[12,"fallback","","",4,null],[4,"PacketType","","",null,null],[13,"Accept","","",5,null],[13,"Fallback","","",5,null],[13,"SmallEffSize","","",5,null],[13,"AssignMismatch","","",5,null],[11,"new","","",4,[[["string",3],["string",3],["updatelist",3]],["packet",3]]],[11,"get_packet_type","","",4,[[["option",4]],["packettype",4]]],[0,"performance_monitor","sparrow::commons","",null,null],[3,"PerformanceMonitor","sparrow::commons::performance_monitor","",null,null],[11,"new","","",6,[[],["performancemonitor",3]]],[11,"reset","","",6,[[]]],[11,"start","","",6,[[]]],[11,"resume","","",6,[[]]],[11,"update","","",6,[[]]],[11,"pause","","",6,[[]]],[11,"write_log","","",6,[[]]],[11,"get_duration","","",6,[[]]],[11,"get_counts","","",6,[[]]],[0,"persistent_io","sparrow::commons","",null,null],[5,"write_sample_local","sparrow::commons::persistent_io","",null,[[["string",3],["vec",3],["model",6],["examplewithscore",6]]]],[5,"write_sample_s3","","",null,[[["string",3],["vec",3],["model",6],["examplewithscore",6]]]],[5,"load_sample","","",null,[[["lockedbuffer",6]]]],[5,"load_sample_local","","",null,[[],[["option",4],["versionedsamplemodel",6]]]],[5,"load_sample_s3","","",null,[[],[["option",4],["versionedsamplemodel",6]]]],[5,"write_model","","",null,[[["model",6]],["string",3]]],[5,"upload_model","","",null,[[["model",6],["string",3]]]],[5,"read_model","","",null,[[]]],[5,"download_model","","",null,[[["string",3]],[["option",4],["modelpack",6]]]],[5,"upload_assignments","","",null,[[["string",3],["vec",3]]]],[5,"download_assignments","","",null,[[["string",3]],[["vec",3],["option",4]]]],[5,"write_bins_disk","","",null,[[["vec",3]]]],[5,"write_bins_s3","","",null,[[["string",3],["vec",3]]]],[5,"read_bins_disk","","",null,[[],[["vec",3],["bins",3]]]],[5,"read_bins_s3","","",null,[[["string",3]],[["vec",3],["bins",3]]]],[6,"VersionedSampleModel","","",null,null],[6,"ModelPack","","",null,null],[6,"LockedBuffer","","",null,null],[0,"tree","sparrow::commons","",null,null],[3,"ADTree","sparrow::commons::tree","",null,null],[12,"tree_size","","",7,null],[12,"parent","","",7,null],[12,"children","","",7,null],[12,"depth","","",7,null],[12,"last_gamma","","",7,null],[12,"base_version","","",7,null],[12,"model_updates","","",7,null],[3,"UpdateList","","",null,null],[12,"size","","",8,null],[12,"parent","","",8,null],[12,"feature","","",8,null],[12,"threshold","","",8,null],[12,"evaluation","","",8,null],[12,"predicts","","",8,null],[12,"is_new","","",8,null],[11,"new","","",7,[[],["adtree",3]]],[11,"size","","",7,[[]]],[11,"add_nodes","","",7,[[["tfeature",6]]]],[11,"add_root","","",7,[[]]],[11,"add_grid","","",7,[[["vec",3]]]],[11,"get_prediction_tree","","",7,[[["example",6]]]],[11,"visit_tree","","",7,[[["example",6],["vec",3]]]],[11,"get_prediction","","",7,[[["example",6]]]],[11,"is_visited","","",7,[[["example",6]]]],[11,"get_leaf_index_prediction","","",7,[[["example",6]]]],[11,"append_patch","","",7,[[["updatelist",3]],["vec",3]]],[11,"get_conditions","","",7,[[],["vec",3]]],[11,"new","","",8,[[],["updatelist",3]]],[11,"get_prediction_ul","","",8,[[["example",6]]]],[11,"add","","",8,[[["vec",3],["tfeature",6]]]],[11,"create_slice","","",8,[[["range",3]],["updatelist",3]]],[6,"ExampleInSampleSet","sparrow::commons","",null,null],[6,"ExampleWithScore","","",null,null],[6,"Model","","",null,null],[17,"INIT_MODEL_PREFIX","","",null,null],[6,"RawTFeature","sparrow","",null,null],[6,"TFeature","","",null,null],[6,"TLabel","","",null,null],[6,"RawExample","","",null,null],[6,"Example","","",null,null],[17,"REGION","","",null,null],[17,"BUCKET","","",null,null],[11,"from","sparrow::commons::bins","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"try_into","","",0,[[],["result",4]]],[11,"from","sparrow::commons::channel","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"try_into","","",9,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"try_into","","",1,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"try_into","","",2,[[],["result",4]]],[11,"from","sparrow::commons::labeled_data","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"from","sparrow::commons::packet","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_into","","",4,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_into","","",5,[[],["result",4]]],[11,"from","sparrow::commons::performance_monitor","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"try_into","","",6,[[],["result",4]]],[11,"from","sparrow::commons::tree","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"try_into","","",8,[[],["result",4]]],[11,"clone","sparrow::commons::bins","",0,[[],["bins",3]]],[11,"clone","sparrow::commons::channel","",1,[[],["sender",3]]],[11,"clone","","",2,[[],["receiver",3]]],[11,"clone","sparrow::commons::labeled_data","",3,[[],["labeleddata",3]]],[11,"clone","sparrow::commons::tree","",7,[[],["adtree",3]]],[11,"clone","","",8,[[],["updatelist",3]]],[11,"eq","sparrow::commons::labeled_data","",3,[[["labeleddata",3]]]],[11,"eq","sparrow::commons::tree","",7,[[["adtree",3]]]],[11,"fmt","sparrow::commons::bins","",0,[[["formatter",3]],["result",6]]],[11,"fmt","sparrow::commons::labeled_data","",3,[[["formatter",3]],["result",6]]],[11,"fmt","sparrow::commons::packet","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","sparrow::commons::performance_monitor","",6,[[["formatter",3]],["result",6]]],[11,"fmt","sparrow::commons::tree","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"serialize","sparrow::commons::bins","",0,[[],["result",4]]],[11,"serialize","sparrow::commons::labeled_data","",3,[[],["result",4]]],[11,"serialize","sparrow::commons::packet","",4,[[],["result",4]]],[11,"serialize","sparrow::commons::tree","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"deserialize","sparrow::commons::bins","",0,[[],["result",4]]],[11,"deserialize","sparrow::commons::labeled_data","",3,[[],["result",4]]],[11,"deserialize","sparrow::commons::packet","",4,[[],["result",4]]],[11,"deserialize","sparrow::commons::tree","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]]],"p":[[3,"Bins"],[3,"Sender"],[3,"Receiver"],[3,"LabeledData"],[3,"Packet"],[4,"PacketType"],[3,"PerformanceMonitor"],[3,"ADTree"],[3,"UpdateList"],[3,"ChannelMonitor"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);